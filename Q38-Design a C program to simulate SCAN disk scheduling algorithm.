#include <stdio.h>
#include <stdlib.h>

#define MAX 100

void sort(int arr[], int n) {
    for (int i = 0; i < n - 1; i++)
        for (int j = i + 1; j < n; j++)
            if (arr[i] > arr[j]) {
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
}

int main() {
    int request[MAX], n, head, direction;
    int total_movement = 0;

    printf("Enter number of disk I/O requests: ");
    scanf("%d", &n);

    printf("Enter request sequence:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &request[i]);
    }

    printf("Enter initial head position: ");
    scanf("%d", &head);

    printf("Enter direction (0 for left, 1 for right): ");
    scanf("%d", &direction);

    request[n++] = head;
    sort(request, n);

    int pos;
    for (int i = 0; i < n; i++) {
        if (request[i] == head) {
            pos = i;
            break;
        }
    }

    printf("\nProcessing order:\n");

    if (direction == 1) {  // Moving right
        for (int i = pos; i < n; i++) {
            printf("Move from %d to %d\n", head, request[i]);
            total_movement += abs(request[i] - head);
            head = request[i];
        }
        for (int i = pos - 1; i >= 0; i--) {
            printf("Move from %d to %d\n", head, request[i]);
            total_movement += abs(request[i] - head);
            head = request[i];
        }
    } else {  // Moving left
        for (int i = pos; i >= 0; i--) {
            printf("Move from %d to %d\n", head, request[i]);
            total_movement += abs(request[i] - head);
            head = request[i];
        }
        for (int i = pos + 1; i < n; i++) {
            printf("Move from %d to %d\n", head, request[i]);
            total_movement += abs(request[i] - head);
            head = request[i];
        }
    }

    printf("\nTotal head movement = %d cylinders\n", total_movement);
    return 0;
}
